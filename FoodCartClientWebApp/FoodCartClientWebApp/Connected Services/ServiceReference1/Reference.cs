//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodCartClientWebApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FoodItem", Namespace="http://schemas.datacontract.org/2004/07/FoodCartServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class FoodItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartItem", Namespace="http://schemas.datacontract.org/2004/07/FoodCartServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class CartItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICartService")]
    public interface ICartService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/GetAllFoods", ReplyAction="http://tempuri.org/ICartService/GetAllFoodsResponse")]
        FoodCartClientWebApp.ServiceReference1.FoodItem[] GetAllFoods();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/GetAllFoods", ReplyAction="http://tempuri.org/ICartService/GetAllFoodsResponse")]
        System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.FoodItem[]> GetAllFoodsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/AddItemToCart", ReplyAction="http://tempuri.org/ICartService/AddItemToCartResponse")]
        void AddItemToCart(FoodCartClientWebApp.ServiceReference1.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/AddItemToCart", ReplyAction="http://tempuri.org/ICartService/AddItemToCartResponse")]
        System.Threading.Tasks.Task AddItemToCartAsync(FoodCartClientWebApp.ServiceReference1.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/RemoveItemFromCart", ReplyAction="http://tempuri.org/ICartService/RemoveItemFromCartResponse")]
        void RemoveItemFromCart(FoodCartClientWebApp.ServiceReference1.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/RemoveItemFromCart", ReplyAction="http://tempuri.org/ICartService/RemoveItemFromCartResponse")]
        System.Threading.Tasks.Task RemoveItemFromCartAsync(FoodCartClientWebApp.ServiceReference1.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/UpdateCart", ReplyAction="http://tempuri.org/ICartService/UpdateCartResponse")]
        int UpdateCart(FoodCartClientWebApp.ServiceReference1.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/UpdateCart", ReplyAction="http://tempuri.org/ICartService/UpdateCartResponse")]
        System.Threading.Tasks.Task<int> UpdateCartAsync(FoodCartClientWebApp.ServiceReference1.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/GetAllItemsFromCart", ReplyAction="http://tempuri.org/ICartService/GetAllItemsFromCartResponse")]
        FoodCartClientWebApp.ServiceReference1.CartItem[] GetAllItemsFromCart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/GetAllItemsFromCart", ReplyAction="http://tempuri.org/ICartService/GetAllItemsFromCartResponse")]
        System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.CartItem[]> GetAllItemsFromCartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/GetItemFromCart", ReplyAction="http://tempuri.org/ICartService/GetItemFromCartResponse")]
        FoodCartClientWebApp.ServiceReference1.CartItem GetItemFromCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/GetItemFromCart", ReplyAction="http://tempuri.org/ICartService/GetItemFromCartResponse")]
        System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.CartItem> GetItemFromCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/SearchItemByName", ReplyAction="http://tempuri.org/ICartService/SearchItemByNameResponse")]
        FoodCartClientWebApp.ServiceReference1.FoodItem[] SearchItemByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICartService/SearchItemByName", ReplyAction="http://tempuri.org/ICartService/SearchItemByNameResponse")]
        System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.FoodItem[]> SearchItemByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICartServiceChannel : FoodCartClientWebApp.ServiceReference1.ICartService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CartServiceClient : System.ServiceModel.ClientBase<FoodCartClientWebApp.ServiceReference1.ICartService>, FoodCartClientWebApp.ServiceReference1.ICartService {
        
        public CartServiceClient() {
        }
        
        public CartServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CartServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CartServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CartServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FoodCartClientWebApp.ServiceReference1.FoodItem[] GetAllFoods() {
            return base.Channel.GetAllFoods();
        }
        
        public System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.FoodItem[]> GetAllFoodsAsync() {
            return base.Channel.GetAllFoodsAsync();
        }
        
        public void AddItemToCart(FoodCartClientWebApp.ServiceReference1.CartItem item) {
            base.Channel.AddItemToCart(item);
        }
        
        public System.Threading.Tasks.Task AddItemToCartAsync(FoodCartClientWebApp.ServiceReference1.CartItem item) {
            return base.Channel.AddItemToCartAsync(item);
        }
        
        public void RemoveItemFromCart(FoodCartClientWebApp.ServiceReference1.CartItem item) {
            base.Channel.RemoveItemFromCart(item);
        }
        
        public System.Threading.Tasks.Task RemoveItemFromCartAsync(FoodCartClientWebApp.ServiceReference1.CartItem item) {
            return base.Channel.RemoveItemFromCartAsync(item);
        }
        
        public int UpdateCart(FoodCartClientWebApp.ServiceReference1.CartItem item) {
            return base.Channel.UpdateCart(item);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCartAsync(FoodCartClientWebApp.ServiceReference1.CartItem item) {
            return base.Channel.UpdateCartAsync(item);
        }
        
        public FoodCartClientWebApp.ServiceReference1.CartItem[] GetAllItemsFromCart() {
            return base.Channel.GetAllItemsFromCart();
        }
        
        public System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.CartItem[]> GetAllItemsFromCartAsync() {
            return base.Channel.GetAllItemsFromCartAsync();
        }
        
        public FoodCartClientWebApp.ServiceReference1.CartItem GetItemFromCart(int id) {
            return base.Channel.GetItemFromCart(id);
        }
        
        public System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.CartItem> GetItemFromCartAsync(int id) {
            return base.Channel.GetItemFromCartAsync(id);
        }
        
        public FoodCartClientWebApp.ServiceReference1.FoodItem[] SearchItemByName(string name) {
            return base.Channel.SearchItemByName(name);
        }
        
        public System.Threading.Tasks.Task<FoodCartClientWebApp.ServiceReference1.FoodItem[]> SearchItemByNameAsync(string name) {
            return base.Channel.SearchItemByNameAsync(name);
        }
    }
}
